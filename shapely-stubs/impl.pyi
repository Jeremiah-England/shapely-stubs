from typing import Type

from shapely.topology import Validating

class ImplementationError(AttributeError, KeyError, NotImplementedError): ...

def delegated(func): ...

class BaseImpl:
    def __init__(self, values: dict[str, Validating]) -> None: ...
    def update(self, values: dict[str, Validating]): ...
    def __getitem__(self, key: str) -> Validating: ...
    def __contains__(self, key: str) -> bool: ...

class GEOSImpl(BaseImpl):
    def __repr__(self) -> str: ...

IMPL330: dict[str, tuple[Type[Validating], str]] = ...
IMPL360: dict[str, tuple[Type[Validating], str]] = ...

def impl_items(defs) -> list[tuple[str, Validating]]: ...

imp: GEOSImpl = ...
DefaultImplementation: GEOSImpl = ...
