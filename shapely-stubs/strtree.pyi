from logging import Logger
from typing import Any, Generic, Iterable, Optional, TypeVar, Union

from shapely.geometry.base import BaseGeometry

log: Logger = ...

_BaseGeometryTypeVar = TypeVar("_BaseGeometryTypeVar", bound=BaseGeometry)

class STRtree(Generic[_BaseGeometryTypeVar]):
    def __init__(
        self,
        geoms: Iterable[_BaseGeometryTypeVar],
        items: Optional[Iterable[Any]] = ...,
        node_capacity: int = ...,
    ) -> None: ...
    def __reduce__(self): ...
    def __del__(self): ...
    def query_items(
        self, geom: BaseGeometry
    ) -> list[_BaseGeometryTypeVar] | list[Any] | list[int]: ...
    def query_geoms(self, geom: BaseGeometry) -> list[_BaseGeometryTypeVar]: ...
    def query(self, geom: BaseGeometry) -> list[_BaseGeometryTypeVar]: ...
    def nearest_item(
        self, geom: BaseGeometry, exclusive: bool = ...
    ) -> Union[Any, None]: ...
    def nearest_geom(
        self, geom: BaseGeometry, exclusive: bool = ...
    ) -> Union[_BaseGeometryTypeVar, None]: ...
    def nearest(
        self, geom: BaseGeometry, exclusive: bool = ...
    ) -> Union[_BaseGeometryTypeVar, None]: ...
