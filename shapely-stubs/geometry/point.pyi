"""
This type stub file was generated by pyright.
"""

from shapely.geometry.base import BaseGeometry
from shapely.geometry.proxy import CachingGeometryProxy

"""Points and related utilities
"""
__all__ = ["Point", "asPoint"]

class Point(BaseGeometry):
    """
    A zero dimensional feature

    A point has zero length and zero area.

    Attributes
    ----------
    x, y, z : float
        Coordinate values

    Example
    -------
      >>> p = Point(1.0, -1.0)
      >>> print(p)
      POINT (1 -1)
      >>> p.y
      -1.0
      >>> p.x
      1.0
    """

    def __init__(self, *args) -> None:
        """
        Parameters
        ----------
        There are 2 cases:

        1) 1 parameter: this must satisfy the numpy array protocol.
        2) 2 or more parameters: x, y, z : float
            Easting, northing, and elevation.
        """
        ...
    @property
    def x(self):  # -> Any:
        """Return x coordinate."""
        ...
    @property
    def y(self):  # -> Any:
        """Return y coordinate."""
        ...
    @property
    def z(self):  # -> Any:
        """Return z coordinate."""
        ...
    @property
    def __geo_interface__(self): ...
    def svg(self, scale_factor=..., fill_color=..., opacity=...):  # -> str:
        """Returns SVG circle element for the Point geometry.

        Parameters
        ==========
        scale_factor : float
            Multiplication factor for the SVG circle diameter.  Default is 1.
        fill_color : str, optional
            Hex string for fill color. Default is to use "#66cc99" if
            geometry is valid, and "#ff3333" if invalid.
        opacity : float
            Float number between 0 and 1 for color opacity. Default value is 0.6
        """
        ...
    def array_interface(self):  # -> dict[str, Unknown]:
        """Provide the Numpy array protocol."""
        ...
    @property
    def __array_interface__(self): ...
    @property
    def bounds(self):  # -> tuple[()] | tuple[Any, Any, Any, Any]:
        """Returns minimum bounding region (minx, miny, maxx, maxy)"""
        ...
    coords = ...
    @property
    def xy(self):  # -> Any:
        """Separate arrays of X and Y coordinate values

        Example:
          >>> x, y = Point(0, 0).xy
          >>> list(x)
          [0.0]
          >>> list(y)
          [0.0]
        """
        ...

class PointAdapter(CachingGeometryProxy, Point):
    _other_owned = ...
    def __init__(self, context) -> None: ...
    @property
    def __array_interface__(self):  # -> dict[str, Unknown]:
        """Provide the Numpy array protocol."""
        ...
    coords = ...

def asPoint(context):  # -> PointAdapter:
    """Adapt an object to the Point interface"""
    ...

def geos_point_from_py(
    ob, update_geom=..., update_ndim=...
):  # -> tuple[Any | Unknown, Unknown] | tuple[Any, int] | None:
    """Create a GEOS geom from an object that is a Point, a coordinate sequence
    or that provides the array interface.

    Returns the GEOS geometry and the number of its dimensions.
    """
    ...

def update_point_from_py(geom, ob): ...
